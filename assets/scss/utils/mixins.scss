@import './vars.scss';


/* Mixins:
  ========================================================================== */



@mixin placeholder {
  ::-webkit-input-placeholder {
    @content;
  }

  :-moz-placeholder {
    @content;
  }

  ::-moz-placeholder {
    @content;
  }

  :-ms-input-placeholder {
    @content;
  }
}







@mixin btn() {
  display: inline-block;
  vertical-align: middle;
  white-space: nowrap;
  font-family: inherit;
  font-size: 100%;
  cursor: pointer;
  border: 1px solid $mainFontColor;
  border-radius: 5px;
  margin: 0;
  color: $mainFontColor;
  overflow: visible;

  &:hover,
  &:active,
  &:focus,
  &:visited {
    text-decoration: none;
  }

  &:hover {
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    color: $mainFontColor;

  }

  &:active,
  &:focus {
    outline: none;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5) inset;
    opacity: 0.6;
    color: $mainFontColor;
  }

  &::-moz-focus-inner {
    border: 0;
    padding: 0;
  }
}


@mixin placeholder($color: $text-color, $alpha: .8) {
  &::-webkit-input-placeholder {
    color: rgba($color, $alpha);
  }

  /* WebKit browsers */

  &:-moz-placeholder {
    color: rgba($color, 1)
  }

  /* Mozilla Firefox 4 to 18 */

  &::-moz-placeholder {
    color: rgba($color, 1)
  }

  /* Mozilla Firefox 19+ */

  &:-ms-input-placeholder {
    color: rgba($color, $alpha)
  }

}

@mixin font-size($font-size, $line-height: normal, $letter-spacing: normal) {
  font-size: $font-size * 1px;

  @if $line-height==normal {
    line-height: normal;
  }

  @else {
    line-height: $line-height / $font-size;
  }

  letter-spacing: $letter-spacing;
}



@mixin flexbox {
  display: -webkit-box;
  display: -moz-box;
  display: -ms-flexbox;
  display: -webkit-flex;
  display: flex;
}



@mixin flex-direction($direction: row) {
  @if $direction==row-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: horizontal;
    -moz-box-direction: reverse;
    -moz-box-orient: horizontal;
  }

  @else if $direction==column {
    -webkit-box-direction: normal;
    -webkit-box-orient: vertical;
    -moz-box-direction: normal;
    -moz-box-orient: vertical;
  }

  @else if $direction==column-reverse {
    -webkit-box-direction: reverse;
    -webkit-box-orient: vertical;
    -moz-box-direction: reverse;
    -moz-box-orient: vertical;
  }

  @else {
    -webkit-box-direction: normal;
    -webkit-box-orient: horizontal;
    -moz-box-direction: normal;
    -moz-box-orient: horizontal;
  }

  -webkit-flex-direction: $direction;
  -ms-flex-direction: $direction;
  flex-direction: $direction;
}


@mixin justify-content($value: flex-start) {
  @if $value==flex-start {
    -webkit-box-pack: start;
    -moz-box-pack: start;
    -ms-flex-pack: start;
  }

  @else if $value==flex-end {
    -webkit-box-pack: end;
    -moz-box-pack: end;
    -ms-flex-pack: end;
  }

  @else if $value==space-between {
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    -ms-flex-pack: justify;
  }

  @else if $value==space-around {
    -ms-flex-pack: distribute;
  }

  @else {
    -webkit-box-pack: $value;
    -moz-box-pack: $value;
    -ms-flex-pack: $value;
  }

  -webkit-justify-content: $value;
  justify-content: $value;
}






@mixin align-items($value: stretch) {
  @if $value==flex-start {
    -webkit-box-align: start;
    -moz-box-align: start;
    -ms-flex-align: start;
  }

  @else if $value==flex-end {
    -webkit-box-align: end;
    -moz-box-align: end;
    -ms-flex-align: end;
  }

  @else {
    -webkit-box-align: $value;
    -moz-box-align: $value;
    -ms-flex-align: $value;
  }

  -webkit-align-items: $value;
  align-items: $value;
}